{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/popup.component.ts","webpack:///./src/app/popup.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { PopupService } from './popup.service';\nimport { PopupComponent } from './popup.component';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <input #input value=\"Message\">\n    <button (click)=\"popup.showAsComponent(input.value)\">Show as component</button>\n    <button (click)=\"popup.showAsElement(input.value)\">Show as element</button>\n  `,\n})\nexport class AppComponent {\n  constructor(injector: Injector, public popup: PopupService) {\n    // Convert `PopupComponent` to a custom element.\n    const PopupElement = createCustomElement(PopupComponent, {injector});\n    // Register the custom element with the browser.\n    customElements.define('popup-element', PopupElement);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { PopupComponent } from './popup.component';\nimport { PopupService } from './popup.service';\n\n// Include the `PopupService` provider,\n// but exclude `PopupComponent` from compilation,\n// because it will be added dynamically.\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule],\n  providers: [PopupService],\n  declarations: [AppComponent, PopupComponent],\n  bootstrap: [AppComponent],\n  entryComponents: [PopupComponent],\n})\nexport class AppModule {\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'my-popup',\n  template: `\n    <span>Popup: {{message}}</span>\n    <button (click)=\"closed.next()\">&#x2716;</button>\n  `,\n  host: {\n    '[@state]': 'state',\n  },\n  animations: [\n    trigger('state', [\n      state('opened', style({transform: 'translateY(0%)'})),\n      state('void, closed', style({transform: 'translateY(100%)', opacity: 0})),\n      transition('* => *', animate('100ms ease-in')),\n    ])\n  ],\n  styles: [`\n    :host {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background: #009cff;\n      height: 48px;\n      padding: 16px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      border-top: 1px solid black;\n      font-size: 24px;\n    }\n\n    button {\n      border-radius: 50%;\n    }\n  `]\n})\nexport class PopupComponent {\n  private state: 'opened' | 'closed' = 'closed';\n\n  @Input()\n  set message(message: string) {\n    this._message = message;\n    this.state = 'opened';\n  }\n  get message(): string { return this._message; }\n  _message: string;\n\n  @Output()\n  closed = new EventEmitter();\n}\n","\nimport { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from '@angular/core';\nimport { NgElement, WithProperties } from '@angular/elements';\nimport { PopupComponent } from './popup.component';\n\n\n@Injectable()\nexport class PopupService {\n  constructor(private injector: Injector,\n              private applicationRef: ApplicationRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  // Previous dynamic-loading method required you to set up infrastructure\n  // before adding the popup to the DOM.\n  showAsComponent(message: string) {\n    // Create element\n    const popup = document.createElement('popup-component');\n\n    // Create the component and wire it up with the element\n    const factory = this.componentFactoryResolver.resolveComponentFactory(PopupComponent);\n    const popupComponentRef = factory.create(this.injector, [], popup);\n\n    // Attach to the view so that the change detector knows to run\n    this.applicationRef.attachView(popupComponentRef.hostView);\n\n    // Listen to the close event\n    popupComponentRef.instance.closed.subscribe(() => {\n      document.body.removeChild(popup);\n      this.applicationRef.detachView(popupComponentRef.hostView);\n    });\n\n    // Set the message\n    popupComponentRef.instance.message = message;\n\n    // Add to the DOM\n    document.body.appendChild(popup);\n  }\n\n  // This uses the new custom-element method to add the popup to the DOM.\n  showAsElement(message: string) {\n    // Create element\n    const popupEl: NgElement & WithProperties<PopupComponent> = document.createElement('popup-element') as any;\n\n    // Listen to the close event\n    popupEl.addEventListener('closed', () => document.body.removeChild(popupEl));\n\n    // Set the message\n    popupEl.message = message;\n\n    // Add to the DOM\n    document.body.appendChild(popupEl);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}